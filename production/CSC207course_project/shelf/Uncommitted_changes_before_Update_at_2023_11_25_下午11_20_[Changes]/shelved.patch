Index: src/view/ListLikedPostView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\n\nimport entities.postEntity;\nimport interface_adapter.back.BackController;\nimport interface_adapter.list_liked_post.ListLikedPostController;\nimport interface_adapter.list_liked_post.ListLikedPostViewModel;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.beans.PropertyChangeEvent;\nimport java.beans.PropertyChangeListener;\nimport java.util.ArrayList;\n\npublic class ListLikedPostView extends JPanel implements ActionListener, PropertyChangeListener {\n    public final String viewName = \"list liked post\";\n    private final ListLikedPostViewModel listLikedPostViewModel;\n    private final ListLikedPostController listLikedPostController;\n    private final BackController backController;\n    final JButton back;\n    private Dimension size;\n\n    public ListLikedPostView(ListLikedPostViewModel listLikedPostViewModel, ListLikedPostController listLikedPostController, BackController backController) {\n        this.listLikedPostViewModel = listLikedPostViewModel;\n        this.listLikedPostController = listLikedPostController;\n        this.backController = backController;\n        this.listLikedPostViewModel.addPropertyChangeListener(this);\n        JLabel title = new JLabel(\"Liked Post\");\n        title.setAlignmentX(Component.CENTER_ALIGNMENT);\n        ArrayList<postEntity> likedPost = this.listLikedPostViewModel.getState().getListOfLikedPostArray();\n\n\n        JPanel postsPanel = new JPanel();\n        postsPanel.setLayout(new BoxLayout(postsPanel, BoxLayout.Y_AXIS));\n        for (postEntity post : likedPost) {\n            JPanel onePost = this.createPostPanel(post);\n            postsPanel.add(onePost);\n        }\n        JScrollPane postsScroll = new JScrollPane(postsPanel);\n        postsScroll.getViewport().setPreferredSize(new Dimension(600, 500));\n        this.add(postsScroll);\n        back = new JButton(this.listLikedPostViewModel.BACK_LABEL);\n        back.addActionListener(\n                new ActionListener() {\n                    @Override\n                    public void actionPerformed(ActionEvent evt) {\n                        if (evt.getSource().equals(back)) {\n                            backController.execute();\n                        }\n                    }\n                }\n        );\n        this.add(back);\n\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n\n    }\n\n    @Override\n    public void propertyChange(PropertyChangeEvent evt) {\n\n    }\n\n    private JPanel createPostPanel(postEntity post) {\n        int postPanelWidth = 500; // Set your desired width\n        int postPanelHeight = 100;\n        JPanel postPanel = new JPanel();\n        postPanel.setLayout(new BorderLayout());\n//\n        postPanel.setPreferredSize(new Dimension(postPanelWidth, postPanelHeight));\n        postPanel.setMinimumSize(new Dimension(postPanelWidth, postPanelHeight));\n        postPanel.setMaximumSize(new Dimension(postPanelWidth, postPanelHeight));\n\n        Object postInfo = post.getPostInfo();\n        JTextArea contentTextArea = new JTextArea(String.valueOf(postInfo));\n        contentTextArea.setWrapStyleWord(true);\n        contentTextArea.setLineWrap(true);\n        contentTextArea.setEditable(false);\n        JScrollPane contentScrollPane = new JScrollPane(contentTextArea);\n        postPanel.add(contentScrollPane);\n        return postPanel;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/ListLikedPostView.java b/src/view/ListLikedPostView.java
--- a/src/view/ListLikedPostView.java	(revision ff459832ce24b0855e4bf7f4776bb50a0843bc38)
+++ b/src/view/ListLikedPostView.java	(date 1700971925575)
@@ -28,6 +28,7 @@
         this.listLikedPostViewModel.addPropertyChangeListener(this);
         JLabel title = new JLabel("Liked Post");
         title.setAlignmentX(Component.CENTER_ALIGNMENT);
+        this.add(title);
         ArrayList<postEntity> likedPost = this.listLikedPostViewModel.getState().getListOfLikedPostArray();
 
 
Index: src/view/ViewManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;public class ViewManager {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/ViewManager.java b/src/view/ViewManager.java
--- a/src/view/ViewManager.java	(revision ff459832ce24b0855e4bf7f4776bb50a0843bc38)
+++ b/src/view/ViewManager.java	(date 1700862749145)
@@ -1,2 +1,29 @@
-package view;public class ViewManager {
+package view;
+
+import interface_adapter.ViewManagerModel;
+
+import javax.swing.*;
+import java.awt.*;
+import java.beans.PropertyChangeEvent;
+import java.beans.PropertyChangeListener;
+
+public class ViewManager implements PropertyChangeListener {
+    private final CardLayout cardLayout;
+    private final JPanel views;
+    private ViewManagerModel viewManagerModel;
+
+    public ViewManager(JPanel views, CardLayout cardLayout, ViewManagerModel viewManagerModel) {
+        this.views = views;
+        this.cardLayout = cardLayout;
+        this.viewManagerModel = viewManagerModel;
+        this.viewManagerModel.addPropertyChangeListener(this);
+    }
+
+    @Override
+    public void propertyChange(PropertyChangeEvent evt) {
+        if (evt.getPropertyName().equals("view")) {
+            String viewModelName = (String) evt.getNewValue();
+            cardLayout.show(views, viewModelName);
+        }
+    }
 }
Index: src/interface_adapter/postViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;\n\nimport java.beans.PropertyChangeListener;\nimport java.beans.PropertyChangeSupport;\n\npublic class postViewModel extends ViewModel{\n    public static final String POST_BUTTON_LABEL = \"Post\";\n    private postState postState = new postState();\n    private final PropertyChangeSupport support = new PropertyChangeSupport(this);\n    public postViewModel() {\n        super(\"post\");\n    }\n\n    @Override\n    public void firePropertyChanged() {\n        support.firePropertyChange(\"post\", null, this.postState);\n    }\n\n    @Override\n    public void addPropertyChangeListener(PropertyChangeListener listener) {\n        support.addPropertyChangeListener(listener);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/interface_adapter/postViewModel.java b/src/interface_adapter/postViewModel.java
--- a/src/interface_adapter/postViewModel.java	(revision ff459832ce24b0855e4bf7f4776bb50a0843bc38)
+++ b/src/interface_adapter/postViewModel.java	(date 1700864965539)
@@ -1,4 +1,6 @@
-package data_access;
+package interface_adapter;
+
+import data_access.postState;
 
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
Index: CSC207course_project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/.idea\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/test\" isTestSource=\"true\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CSC207course_project.iml b/CSC207course_project.iml
--- a/CSC207course_project.iml	(revision ff459832ce24b0855e4bf7f4776bb50a0843bc38)
+++ b/CSC207course_project.iml	(date 1700864591130)
@@ -3,7 +3,6 @@
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/.idea" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
     </content>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_20\" project-jdk-name=\"corretto-20\" project-jdk-type=\"JavaSDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ff459832ce24b0855e4bf7f4776bb50a0843bc38)
+++ b/.idea/misc.xml	(date 1700880632641)
@@ -1,3 +1,5 @@
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" project-jdk-name="corretto-20" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" project-jdk-name="corretto-20" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/../xuanboha" />
+  </component>
 </project>
\ No newline at end of file
