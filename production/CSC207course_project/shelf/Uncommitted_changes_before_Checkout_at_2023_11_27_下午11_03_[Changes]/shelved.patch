Index: src/interface_adapter/list_liked_post/ListLikedPostViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package interface_adapter.list_liked_post;\n\nimport interface_adapter.ViewModel;\n\nimport javax.swing.text.View;\nimport java.beans.PropertyChangeListener;\nimport java.beans.PropertyChangeSupport;\n\npublic class ListLikedPostViewModel extends ViewModel {\n    public static final String BACK_LABEL = \"Back to Post Plaza\";\n    private ListLikedPostState state = new ListLikedPostState();\n    private final PropertyChangeSupport support = new PropertyChangeSupport(this);\n    public ListLikedPostViewModel() {\n        super(\"liked post\");\n    }\n\n    @Override\n    public void firePropertyChanged() {\n        support.firePropertyChange(\"back\", null, this.state);\n    }\n\n    @Override\n    public void addPropertyChangeListener(PropertyChangeListener listener) {\n        support.addPropertyChangeListener(listener);\n    }\n\n    public ListLikedPostState getState(){\n        return state;\n    }\n    public void setState(ListLikedPostState newstate){\n        this.state = newstate;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/interface_adapter/list_liked_post/ListLikedPostViewModel.java b/src/interface_adapter/list_liked_post/ListLikedPostViewModel.java
--- a/src/interface_adapter/list_liked_post/ListLikedPostViewModel.java	(revision e422b14c2a5b75dce5ad5a8636e40720d2cdd9da)
+++ b/src/interface_adapter/list_liked_post/ListLikedPostViewModel.java	(date 1701141258692)
@@ -2,7 +2,6 @@
 
 import interface_adapter.ViewModel;
 
-import javax.swing.text.View;
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
 
@@ -30,4 +29,5 @@
     public void setState(ListLikedPostState newstate){
         this.state = newstate;
     }
+
 }
Index: src/entities/postEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entities;\n\nimport java.util.ArrayList;\n\n    public class postEntity {\n    private Object postInfo;\n    private ArrayList<String> postComment;\n    private Integer postLiked;\n    private static Integer countpostID = 0;\n    private Integer postID;\n    public postEntity(Object postInfo){\n        this.postInfo = postInfo;\n        postLiked = 0;\n        postComment = new ArrayList<String>();\n        countpostID ++;\n        postID = countpostID;\n    }\n    public void updatePostComment(String newComment){\n            postComment.add(newComment);\n        }\n    public void updatedPostLiked(){\n            postLiked += 1;\n        }\n    public Integer getPostLiked() {\n            return postLiked;\n        }\n    public Object getPostInfo() {\n            return postInfo;\n        }\n    public ArrayList<String> getPostComment() {\n            return postComment;\n        }\n    public Integer getId(){\n        return this.postID;\n    }\n    }\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/entities/postEntity.java b/src/entities/postEntity.java
--- a/src/entities/postEntity.java	(revision e422b14c2a5b75dce5ad5a8636e40720d2cdd9da)
+++ b/src/entities/postEntity.java	(date 1701141258716)
@@ -18,8 +18,8 @@
     public void updatePostComment(String newComment){
             postComment.add(newComment);
         }
-    public void updatedPostLiked(){
-            postLiked += 1;
+    public void setPostLiked(Integer postLiked){
+            this.postLiked = postLiked;
         }
     public Integer getPostLiked() {
             return postLiked;
Index: src/view/postView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;public class postView {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/postView.java b/src/view/postView.java
--- a/src/view/postView.java	(revision e422b14c2a5b75dce5ad5a8636e40720d2cdd9da)
+++ b/src/view/postView.java	(date 1701144198239)
@@ -1,2 +1,3 @@
-package view;public class postView {
+package view;
+public class postView {
 }
Index: CSC207course_project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/.idea\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/test\" isTestSource=\"true\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CSC207course_project.iml b/CSC207course_project.iml
--- a/CSC207course_project.iml	(revision e422b14c2a5b75dce5ad5a8636e40720d2cdd9da)
+++ b/CSC207course_project.iml	(date 1701140513449)
@@ -3,11 +3,36 @@
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/.idea" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module-library" scope="TEST">
+      <library name="JUnit4">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library" scope="TEST">
+      <library name="JUnit5.8.1">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
   </component>
 </module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_20\" project-jdk-name=\"corretto-20\" project-jdk-type=\"JavaSDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision e422b14c2a5b75dce5ad5a8636e40720d2cdd9da)
+++ b/.idea/misc.xml	(date 1701143353175)
@@ -1,3 +1,5 @@
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" project-jdk-name="corretto-20" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" project-jdk-name="corretto-20" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/../xuanboha" />
+  </component>
 </project>
\ No newline at end of file
Index: src/app/MainTestForLoginView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/MainTestForLoginView.java b/src/app/MainTestForLoginView.java
new file mode 100644
--- /dev/null	(date 1701143468301)
+++ b/src/app/MainTestForLoginView.java	(date 1701143468301)
@@ -0,0 +1,39 @@
+package app;
+
+import data_access.LoginDataAccess;
+import interface_adapter.ViewManagerModel;
+import interface_adapter.login.LoginController;
+import interface_adapter.login.LoginPresenter;
+import interface_adapter.login.LoginViewModel;
+import use_case.login.LoginInputBoundary;
+import use_case.login.LoginInteractor;
+import use_case.login.LoginOutputBoundary;
+import use_case.login.LoginUserDataAccessInterface;
+import view.LoginView;
+import view.ViewManager;
+
+import javax.swing.*;
+import java.awt.*;
+public class MainTestForLoginView {
+    public static void main(String[] args) {
+        JFrame application = new JFrame("test LikedPost");
+        application.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
+        CardLayout cardLayout = new CardLayout();
+
+        JPanel views = new JPanel(cardLayout);
+        application.add(views);
+        ViewManagerModel viewManagerModel = new ViewManagerModel();
+        new ViewManager(views, cardLayout, viewManagerModel);
+        LoginViewModel loginViewModel = new LoginViewModel();
+        LoginOutputBoundary loginPresenter = new LoginPresenter(viewManagerModel, loginViewModel);
+        LoginUserDataAccessInterface loginUserDataAccessInterface = new LoginDataAccess();
+        LoginInputBoundary loginInteractor = new LoginInteractor(loginUserDataAccessInterface, loginPresenter);
+        LoginController loginController = new LoginController(loginInteractor);
+        LoginView loginView = new LoginView(loginViewModel, loginController);
+
+        views.add(loginView);
+        viewManagerModel.setActiveView(loginViewModel.getViewName());
+        application.pack();
+        application.setVisible(true);
+    }
+}
\ No newline at end of file
Index: src/data_access/LoginDataAccess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/data_access/LoginDataAccess.java b/src/data_access/LoginDataAccess.java
new file mode 100644
--- /dev/null	(date 1701141711029)
+++ b/src/data_access/LoginDataAccess.java	(date 1701141711029)
@@ -0,0 +1,11 @@
+package data_access;
+
+import entities.User;
+import use_case.login.LoginUserDataAccessInterface;
+
+public class LoginDataAccess implements LoginUserDataAccessInterface {
+    @Override
+    public User get(int Username) {
+        return null;
+    }
+}
Index: src/data_access/InMemoryDataAccessObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;\n\nimport entities.postEntity;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class InMemoryDataAccessObject implements postDAO{\n    private ArrayList<postEntity> posts;\n    private InMemoryDataAccessObject(){\n        posts = new ArrayList<postEntity>();\n    }\n    @Override\n    public postEntity getMostRecentPost() {\n        return posts.get(posts.size() -1 );\n    }\n\n    @Override\n    public void savePost(postEntity post) {\n        posts.add(post);\n    }\n\n    @Override\n    public void cleanAllPost() {\n        posts.clear();\n    }\n\n    @Override\n    public postEntity getMostPopularPost() {\n        int i = 0;\n        postEntity mostPopular = posts.get(0);\n        while (i < posts.size()){\n            if (posts.get(i).getPostLiked() > mostPopular.getPostLiked()){\n                mostPopular = posts.get(i);\n            }\n        }\n        return mostPopular;\n    }\n\n    @Override\n    public postEntity getPost(Integer id) {\n        return null;\n    }\n\n    @Override\n    public postEntity getlatestPost(List<postEntity> posts) {\n        Object postEntity;\n        return null;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/data_access/InMemoryDataAccessObject.java b/src/data_access/InMemoryDataAccessObject.java
--- a/src/data_access/InMemoryDataAccessObject.java	(revision e422b14c2a5b75dce5ad5a8636e40720d2cdd9da)
+++ b/src/data_access/InMemoryDataAccessObject.java	(date 1701140988624)
@@ -42,6 +42,11 @@
         return null;
     }
 
+    @Override
+    public List<postEntity> getLatestPosts() {
+        return null;
+    }
+
     @Override
     public postEntity getlatestPost(List<postEntity> posts) {
         Object postEntity;
