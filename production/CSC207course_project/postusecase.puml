@startuml
'https://plantuml.com/class-diagra
class postController{
- postInputBoundary
+ execute(postInputBoundary): void
}
class postInputData{
- postinfo
+ postInputData(postinfo)
}
class postInteractor implements postInputBoundary{
- postDAOs
- postOutputBoundary
+ execute(postInputData)
}
interface postInputBoundary{
+ execute()
}
class postEntity{
- postInfo: obj
- postComment: String
- postLiked: int
+ postEntity(postInfo, postComment, postLiked)
}
class postRecordBest{
- bestPost: postEntity
+ postRecord(bestPost)
}
Interface postOutputBoundary{
+ postSuccessfully()
+ postDeclined()
}
class postOutputData{
- outputInfo
+ postOutputData(outputInfo)
}
class postPresenter implements postOutputBoundary{
- postViewModel
+ postSuccessfully(postOutputData)
+ postDeclined(postOutputData)
}
class postViewModel{
}
Interface postDAOs{
+ recordPosts()
+ recordBestPosts()
}
class DataBase implements postDAOs{
- posts: ArrayList<postEntity>
- postsInDoc: csv
+ recordPosts(postEntity)
+ recordBestPosts(postRecordBest)
}
postController -> postInputBoundary
postInteractor -> postOutputBoundary
postPresenter -> postOutputData
postInteractor -> postOutputData
postInputBoundary -> postInputData
postController -> postInputData
postInteractor -> postEntity
postInteractor -> postRecordBest
postViewModel -> postPresenter
postInteractor -> postDAOs
postDAOs -> postEntity
postDAOs -> postRecordBest


@enduml


